{"version":3,"sources":["logo.svg","utilities/Common.js","frontend/componets/Login.js","frontend/componets/Dashboard.js","frontend/componets/Home.js","utilities/PrivateRoute.js","utilities/PublicRoute.js","App.js","reportWebVitals.js","index.js"],"names":["getToken","sessionStorage","getItem","useFormInput","initialValue","useState","value","setValue","onChange","e","target","Login","props","loading","setLoading","username","password","error","setError","type","autoComplete","style","margin","color","onClick","axios","post","then","response","token","user","data","setItem","JSON","stringify","history","push","catch","status","message","disabled","Dashboard","userStr","parse","getUser","name","removeItem","Home","PrivateRoute","Component","component","rest","render","to","pathname","state","from","location","PublicRoute","App","className","exact","activeClassName","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ebd4b8c3.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","// return the user data from the session storage\nexport const getUser=()=>{\n    const userStr = sessionStorage.getItem('user')\n    if(userStr) return JSON.parse(userStr)\n    else return null\n}\n// return the token from the session storage\nexport const getToken = ()=>{\n    return sessionStorage.getItem('token') || null\n}\n// remove the token and user from the session storage\nexport const removeUserSession = ()=>{\n    sessionStorage.removeItem('user')\n    sessionStorage.removeItem('token')\n}\n// set the token and user from the session storage\nexport const setUserSession = (token, user) => {\n    sessionStorage.setItem('token', token);\n    sessionStorage.setItem('user', JSON.stringify(user));\n  }\n","import React, {useState} from \"react\";\nimport axios from 'axios';\nimport { setUserSession } from '../../utilities/Common.js';\n//import { setUserSession } from '/media/amrendra/1ED85615D855EC11/Amrendra_Prep_Full_Stack/Favyt_Store/favytstore.github.io/src/utilities/Common.js';\n\n\nfunction Login(props){\n    const [loading, setLoading] = useState(false)\n    const username = useFormInput('')\n    const password = useFormInput('')\n    const [error, setError] = useState(null)\n    //Login button click\n    const handleLogin=()=>{\n        setError(null)\n        setLoading(true)\n        axios.post('http://localhost:4000/users/signin', { username: username.value, password: password.value }).then(response => {\n            setLoading(false);\n            setUserSession(response.data.token, response.data.user);\n            props.history.push('/dashboard');\n          }).catch(error => {\n            setLoading(false);\n            if (error.response.status === 401) setError(error.response.data.message);\n            else setError(\"Something went wrong. Please try again later.\");\n          });\n        }\n    return(\n        <div>\n            Login<br /><br />\n            <div>\n                username<br />\n                <input type=\"text\" {...username} autoComplete=\"new-password\" />\n            </div>\n            <div style={{margin:10}}>\n                password<br />\n                <input type=\"password\" {...password} autoComplete=\"new-password\" />\n            </div>\n            {error && <><small style={{ color: 'red' }}>{error}</small><br /></>}<br />\n            <input type=\"button\" value={loading ? 'Loading...' : 'Login'} onClick={handleLogin} disabled={loading} /><br />     \n        </div>\n    );\n}\nconst useFormInput = initialValue => {\n    const [value, setValue] = useState(initialValue);\n    const handleChange = e => {\n      setValue(e.target.value);\n    }\n    return {\n      value,\n      onChange: handleChange\n    }\n  }\n  export default Login;","import React from \"react\";\nimport {getUser,removeUserSession} from '../../utilities/Common.js'\nfunction Dashboard(props){\n    const user =getUser()\n    //hadle click event of logout button\n    const hadleLogout=()=>{\n        removeUserSession()\n        props.history.push(\"/login\")\n    }\n    return(\n        <div>\n            Welcome {user.name}!!<br /><br />\n            <input type=\"button\" onClick={hadleLogout} value=\"Logout\" />\n        </div>\n    );\n}\nexport default Dashboard;","import React from \"react\";\nfunction Home(){\n    return(\n        <div>\n            <p><h1 style=\"color: blue;\">Welcome to Favyt : Your Favorite Collection!!!</h1></p>\n        </div>\n    );\n}\nexport default Home;","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { getToken } from './Common';\n \n// handle the private routes\nfunction PrivateRoute({ component: Component, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={(props) => getToken() ? <Component {...props} /> : <Redirect to={{ pathname: '/login', state: { from: props.location } }} />}\n    />\n  )\n}\nexport default PrivateRoute;","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { getToken } from './Common';\n\n// handle the public routes\nfunction PublicRoute({ component: Component, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={(props) => !getToken() ? <Component {...props} /> : <Redirect to={{ pathname: '/dashboard' }} />}\n    />\n  )\n}\nexport default PublicRoute;","import logo from './logo.svg';\nimport './App.css';\nimport React from 'react';\nimport {BrowserRouter, Switch, Route, NavLink} from 'react-router-dom';\nimport Login from './frontend/componets/Login';\nimport Dashboard from './frontend/componets/Dashboard';\nimport Home from './frontend/componets/Home';\nimport PrivateRoute from './utilities/PrivateRoute';\nimport PublicRoute from './utilities/PublicRoute';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <div>        \n          <div className=\"header\">\n            <NavLink exact activeClassName = 'active' to ='/'>Home</NavLink>\n            <NavLink exact activeClassName = 'active' to ='/login'>Login</NavLink> <small>(Access without token only)</small>\n            <NavLink exact activeClassName = 'active' to ='/dashboard'>Dashboard</NavLink><small>(Access with token only)</small>\n          </div>\n          <div className=\"contect\">\n              <Switch>\n                <Route exact path='/' component={Home} />\n                <PublicRoute path='/login' component={Login} />\n                <PrivateRoute path='/dashboard' component={Dashboard} />\n              </Switch>\n          </div>\n        </div>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}